Numerical Approximation of Eccentric Anomaly: (Newtons Method)

Function Name:      eccentric_anomoly_calculation
Function Arguments: initial, mean_anomaly, eccentricity, max_iterations, max_accuracy
Module:             Orbit.py
Source:             https://en.wikipedia.org/wiki/Kepler%27s_equation
                    (Numerical Approximation of Inverse Problem)
Notes:              Most Elliptical Orbits at E not E(0) can be instantiated as equal to the mean anomaly
                    at time (t) M(t). However, orbits with an eccentricity greater than 80% or .8, E(0) is
                    better approximated as equal to pi (π). This function is considered to be optimized when
                    f(E) is less than the desired accuracy (max_accuracy).
Variables/Arguments:
    M = Mean Anomaly = mean_anomaly
    E = Eccentric Anomaly
    e = eccentricity = eccentricity
    t = time
    n = iteration number = ith iteration in max_iterations
    E(n) = Eccentric Anomaly at the nth iteration = initial

Kepler's Equation:
    M = E - [e * sin(E)]
    f(E) = E - [e * sin(E)] - M(t)

Newtons Method:
    E(n+1) = E(n)- (f(E(n)) / f'(E(n))
           = E(n) - (E(n) - [e * sin(E(n)] - M(t)) / (1 - [e * cos(E(n)])



Convert TLE Mean Motion from (Revolutions/Day) into (Radians/Second)

Function Name:      motion_radian_per_second
Function Arguments: None
Module:             Orbit.py
Source:             https://space.stackexchange.com/questions/18289/how-to-get-semi-major-axis-from-tle
                    (Numerical Approximation of Inverse Problem)
Notes:              The next goal is to create a function that will calculate the
                    semi-major axis of the satellites orbit. In order to do this
                    we need to convert the mean motion metric from the TLE element,
                    from Revolutions per day into radians per second.

Variables:
    Mean Motion (Rev/day) = The TLE mean motion element

Conversion Equation:
    Mean Motion (Rad/Sec) = 2π / (24hrs•60mins•60sec) * (Mean Motion (Rev/Day))
